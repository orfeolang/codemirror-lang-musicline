@top Program { line* }

line {
    hws*
    ( LineComment | musiclineFormatShort | musiclineFormatLong )
    ( newline | eof )
}

musiclineFormatShort {
    Timepoint
    ( hws* | hws+ eventDataNoteFormatShort )
}

musiclineFormatLong {
    Timepoint hws+
    Voice     hws+
    (
        (
            EventTypeMarker hws+ EventDataMarker

            | EventTypeRest
            | EventTypeTail
            | EventTypeTempo hws+ EventDataTempo
        )
        hws*

        |

        (
            EventTypeNote hws+ eventDataNoteFormatLong
            | EventTypeRested hws+ eventDataRested
        )
    )
}

eventDataNoteFormatShort {
    EventDataNoteEscapeChar EventDataNoteEscaped?
    | EventDataNoteUnescapedFormatShort
}

eventDataNoteFormatLong {
    EventDataNoteEscapeChar EventDataNoteEscaped?
    | EventDataNoteUnescapedFormatLong
}

eventDataRested {
    EventDataRestedEscapeChar EventDataRestedEscaped?
    | EventDataRestedUnescaped
}

@tokens {
    LineComment               { '#' ![\n]* }

    Timepoint                 { number }
    Voice                     { integer }

    EventTypeMarker           { 'marker' }
    EventTypeNote             { 'note' }
    EventTypeRest             { 'rest' }
    EventTypeRested           { 'rested' }
    EventTypeTail             { 'tail' }
    EventTypeTempo            { 'tempo' }

    EventDataMarker           { $[a-zA-Z0-9'_.-]* $[a-zA-Z0-9']+ }
    EventDataTempo            { number }

    EventDataNoteEscapeChar   { escape }
    EventDataNoteEscaped      { escapedData }
    EventDataNoteUnescapedFormatShort { unescapedDataFormatShort }
    EventDataNoteUnescapedFormatLong  { unescapedDataFormatLong }

    EventDataRestedEscapeChar { escape }
    EventDataRestedEscaped    { escapedData }
    EventDataRestedUnescaped  { unescapedDataFormatLong }

    escape                    { '\\' }
    escapedData               { $[ \t]* ![ \t\n] ![\n]* }
    unescapedDataFormatShort  { ![ \t\n0-9]      ![\n]* }
    unescapedDataFormatLong   { ![ \t\n]         ![\n]* }

    number                    { integer fraction? }
    integer                   { '0' | $[1-9] @digit* }
    fraction                  { '.' @digit+ }
    hws                       { $[ \t] }
    newline                   { '\n' }
    eof                       { @eof }

    @precedence { EventDataNoteEscapeChar, EventDataNoteUnescapedFormatShort }
    @precedence { EventDataNoteEscapeChar, EventDataNoteUnescapedFormatLong }
    @precedence { EventDataRestedEscapeChar, EventDataRestedUnescaped }
}
